
buildscript {
    repositories {
        jcenter()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:2.3.2'
    }
}

apply plugin: 'com.android.library'
apply plugin: 'maven'

android {
    compileSdkVersion 25
    buildToolsVersion '25.0.0'

    defaultConfig {
        minSdkVersion 16
        targetSdkVersion 25
        versionCode 1
        versionName "1.0"
    }
    lintOptions {
        abortOnError false
    }
}

repositories {
    maven {
        url "${project.rootDir}/../example/node_modules/react-native/android"
    }
    mavenCentral()
}

dependencies {
    compile 'com.facebook.react:react-native:+'
}

def configureReactNativePom(def pom) {
    pom.project {
        name "React Native Event Bridge"
        artifactId "react-native-event-bridge"
        version = "0.6.0"
        group = "net.mischneider"
        description 'Send and Receive events between React Native and native.'
        url 'https://github.com/maicki/react-native-event-bridge'

        scm {
            url 'https://github.com/maicki/react-native-event-bridge.git'
            connection 'scm:git:https://github.com/maicki/react-native-event-bridge.git'
            developerConnection 'scm:git:git@github.com/maicki/react-native-event-bridge.git'
        }

        licenses {
            license {
                name 'Apache 2.0'
                url 'https://github.com/maicki/react-native-event-bridge/blob/master/LICENSE'
                distribution 'repo'
            }
        }

        developers {
            developer {
                id 'mischneider'
                name 'Michael Schneider'
            }
        }
    }
}

afterEvaluate { project ->

    task androidJavadoc(type: Javadoc) {
        source = android.sourceSets.main.java.srcDirs
        classpath += files(android.bootClasspath)
        classpath += files(project.getConfigurations().getByName('compile').asList())
        include '**/*.java'
    }

    task androidJavadocJar(type: Jar, dependsOn: androidJavadoc) {
        classifier = 'javadoc'
        from androidJavadoc.destinationDir
    }

    task androidSourcesJar(type: Jar) {
        classifier = 'sources'
        from android.sourceSets.main.java.srcDirs
        include '**/*.java'
    }

    android.libraryVariants.all { variant ->
        def name = variant.name.capitalize()
        task "jar${name}"(type: Jar, dependsOn: variant.javaCompile) {
            from variant.javaCompile.destinationDir
        }
    }

    artifacts {
        archives androidSourcesJar
        archives androidJavadocJar
    }

    task installArchives(type: Upload) {
        configuration = configurations.archives
        repositories.mavenDeployer {
            // Deploy to react-native-event-bridge/maven, ready to publish to npm
            repository url: "file://${projectDir}/../android/maven"

            configureReactNativePom pom
        }
    }
}
